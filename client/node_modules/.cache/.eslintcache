[{"/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/index.js":"1","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/App.js":"2","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/reportWebVitals.js":"3","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Dashboard.js":"4","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/ExamPrep.js":"5","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Homepage.js":"6","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Login/Login.js":"7","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Product/ProductsShow.js":"8","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Product/Product.js":"9","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Order/Mycart.js":"10","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Order/Orders.js":"11","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Product/ProductList.js":"12","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Register/Register.js":"13","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/API/Axios.js":"14"},{"size":535,"mtime":1681410284495,"results":"15","hashOfConfig":"16"},{"size":317,"mtime":1681671444710,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1681410284496,"results":"18","hashOfConfig":"16"},{"size":2546,"mtime":1681851909263,"results":"19","hashOfConfig":"16"},{"size":541,"mtime":1681671412866,"results":"20","hashOfConfig":"16"},{"size":140,"mtime":1681671412883,"results":"21","hashOfConfig":"16"},{"size":2514,"mtime":1681671222317,"results":"22","hashOfConfig":"16"},{"size":2393,"mtime":1681671249139,"results":"23","hashOfConfig":"16"},{"size":2929,"mtime":1681671249136,"results":"24","hashOfConfig":"16"},{"size":21,"mtime":1681671238645,"results":"25","hashOfConfig":"16"},{"size":21,"mtime":1681671238648,"results":"26","hashOfConfig":"16"},{"size":778,"mtime":1681671249137,"results":"27","hashOfConfig":"16"},{"size":6836,"mtime":1681854250466,"results":"28","hashOfConfig":"16"},{"size":98,"mtime":1681854108738,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1wlqo9o",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"33"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/index.js",[],[],[],"/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/App.js",[],[],"/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/reportWebVitals.js",[],[],"/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Dashboard.js",["80","81","82"],[],"import Login from \"./Login/Login\";\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport Homepage from \"./Homepage\";\nimport ProductsShow from \"./Product/ProductsShow\";\nimport \"./App.css\";\nimport ExamPrep from \"./ExamPrep\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Product from \"./Product/Product\";\nimport Orders from \"./Order/Orders\";\nimport MyCart from \"./Order/Mycart\";\nimport Register from \"./Register/Register\";\n\nfunction Dashboard() {\n  let [user, setUser] = useState({\n    username: \"Unknown\",\n  });\n\n  let [userState, setUserState] = useState(\"logoff\");\n\n  const token = localStorage.getItem(\"authorization\");\n\n  useEffect(() => {\n    // console.log(\"changing username\")\n    let tmpuser = localStorage.getItem(\"username\");\n    if (!tmpuser) {\n      tmpuser = \"Unknown\";\n    }\n    setUser({ username: tmpuser });\n  }, [userState]);\n\n  function userToggle() {\n    if (userState == \"logged\") {\n      setUserState(\"logoff\");\n    } else {\n      setUserState(\"logged\");\n    }\n    // console.log(\"toggle button\")\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"authorization\");\n  }\n\n  return (\n    <div className=\"App\">\n      <Register />\n      <ul id=\"menu\">\n        <li>\n          <Link to=\"/\">Homepage</Link>\n        </li>\n        <li>\n          <Link to=\"/login\">Login</Link>\n        </li>\n        <li>\n          <Link to=\"/register\">Register</Link>\n        </li>\n        <li>\n          <Link to=\"/products\">Products</Link>\n        </li>\n        <li>\n          <Link to=\"/productAdd\">Product Add</Link>\n        </li>\n        <li>\n          <Link to=\"/orders\">Orders</Link>\n        </li>\n        <li>\n          <Link to=\"/mycart\">\n            <img src=\"./image/cart.png\" className=\"mycart\" />\n            My cart\n          </Link>\n        </li>\n        <li id=\"user\">[Hello {user.username}]</li>\n        <input type=\"button\" onClick={userToggle} value=\"Logout\" />\n      </ul>\n\n      <Routes>\n        <Route\n          path=\"/login\"\n          element={<Login setUserState={setUserState} userState={userState} />}\n        />\n\n        <Route path=\"/exam\" element={<ExamPrep />} />\n\n        <Route path=\"/\" element={<Homepage />} />\n\n        <Route path=\"/products\" element={<ProductsShow />} />\n\n        <Route path=\"/productAdd\" element={<Product />} />\n\n        <Route path=\"/orders\" element={<Orders />} />\n\n        <Route path=\"/mycart\" element={<MyCart />} />\n\n        <Route path=\"/exam\" element={<ExamPrep />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/ExamPrep.js",[],[],"/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Homepage.js",[],[],"/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Login/Login.js",["83","84"],[],"import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\n// import Homepage from \"../Homepage\";\n// import { Link, Route, Routes, Navigate } from \"react-router-dom\";\nimport \"./Login.css\";\n\nfunction Login(props) {\n  let [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    const endpoint = \"http://localhost:8080/authenticate\";\n\n    const user_object = {\n      username: state.username,\n      password: state.password,\n    };\n\n    axios.post(endpoint, user_object).then((res) => {\n      if (Object.keys(Object.values(res)[0]) == \"jwt\") {\n        localStorage.setItem(\"authorization\", res.data.jwt);\n        localStorage.setItem(\"username\", state.username);\n\n        props.setUserState(\"logged\");\n        handleDashboard();\n        window.location = \"/homepage\";\n      } else {\n        alert(\"Login has failed, check you USERNAME/PASSWORD\");\n      }\n      // console.log(res.data.jwt);\n    });\n  }\n\n  function usernameChangedEvent(event) {\n    // event.targete.value\n    setState({ ...state, username: event.target.value });\n  }\n\n  function passwordChangedEvent(event) {\n    // event.targete.value\n    setState({ ...state, password: event.target.value });\n  }\n\n  function handleDashboard() {\n    const saved_token = localStorage.getItem(\"authorization\");\n    const AuthStr = \"Bearer \".concat(saved_token);\n\n    console.log(\"got token: \", AuthStr);\n\n    axios\n      .get(\"http://localhost:8080/products/getAll\", {\n        headers: {\n          Authorization: AuthStr,\n        },\n      })\n      .then((res) => {\n        console.log(res.data);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div class=\"login-wrapper\">\n        <form class=\"form-signin\" onSubmit={handleFormSubmit}>\n          <h2 class=\"form-signin-heading\">Please login</h2>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"User name\"\n              onChange={usernameChangedEvent}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              placeholder=\"password\"\n              onChange={passwordChangedEvent}\n            />\n          </div>\n          <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Product/ProductsShow.js",["85"],[],"import axios from \"axios\";\nimport { useEffect, useState, createContext } from \"react\";\nimport ProductList from \"./ProductList\";\nimport \"./product.css\";\n\nexport const ResponseContext = createContext();\n\nfunction ProductsShow() {\n  const saved_token = localStorage.getItem(\"authorization\");\n  const AuthStr = \"Bearer \".concat(saved_token);\n  const [actionResponse, setActionResponse] = useState(\"\");\n\n  let [productsState, setProductsState] = useState({\n    products: [\n      {\n        id: \"xx\",\n        productCategory: \"xx\",\n        name: \"xx\",\n        addedDate: \"xx\",\n        price: \"xx\",\n        productStatus: \"xx\",\n      },\n    ],\n  });\n\n  function deleteProduct(id) {\n    const saved_token = localStorage.getItem(\"authorization\");\n    const AuthStr = \"Bearer \".concat(saved_token);\n\n    axios\n      .delete(\"http://localhost:8080/products/\" + id, {\n        headers: {\n          Authorization: AuthStr,\n        },\n      })\n      .then((res) => {\n        console.log(\"Success: \", res);\n        if (!res.data) {\n          setActionResponse(\"Product cannot be deleted.\");\n        } else setActionResponse(\"Product deleted.\");\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  function refresh() {\n    const saved_token = localStorage.getItem(\"authorization\");\n    const AuthStr = \"Bearer \".concat(saved_token);\n    axios\n      .get(\"http://localhost:8080/products/getAll\", {\n        headers: {\n          Authorization: AuthStr,\n        },\n      })\n      .then((res) => {\n        setProductsState({ products: res.data });\n      });\n  }\n\n  useEffect(() => {\n    refresh();\n  }, []);\n\n  useEffect(() => {\n    refresh();\n  }, [actionResponse]);\n\n  return (\n    <ResponseContext.Provider value={actionResponse}>\n      <div className=\"responseMessage\">{actionResponse}</div>\n      <div>\n        {productsState.products.map((item, index) => {\n          return (\n            <ProductList\n              id={item.id}\n              productCategory={item.productCategory}\n              name={item.name}\n              addedDate={item.addedDate}\n              price={item.price}\n              productStatus={item.productStatus}\n              index={index}\n              imagePath={item.imagePath}\n              deleteProduct={deleteProduct}\n            />\n          );\n        })}\n      </div>\n    </ResponseContext.Provider>\n  );\n}\n\nexport default ProductsShow;\n","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Product/Product.js",["86","87","88"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n// import ComboBox from \"react-responsive-combo-box\";\n// import \"react-responsive-combo-box/dist/index.css\";\nimport \"../Product/product.css\";\n\nfunction Product() {\n  //--------------Model\n  const [productCategory, setProductCategory] = useState({\n    category: [\"Clothing\", \"Computer\", \"Book\"],\n  });\n\n  const [selectedCategory, setSelectedCategory] = useState({});\n\n  const [addResponse, setAddResponse] = useState();\n\n  const [inputState, setInputState] = useState({\n    prname: \"\",\n    prprice: 0.0,\n    img: \"./image/def.png\",\n  });\n\n  const saved_token = localStorage.getItem(\"authorization\");\n  const AuthStr = \"Bearer \".concat(saved_token);\n\n  //--------------Functions\n  function populateCategory() {\n    axios\n      .get(\"http://localhost:8080/products/getAllCategory\", {\n        headers: { Authorization: AuthStr },\n      })\n      .then((res) => {\n        setProductCategory({ category: res.data });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  function addNewProduct() {\n    const product = {\n      name: inputState.prname,\n      price: inputState.prprice,\n      productCategory: selectedCategory,\n      user: { id: 1 },\n      imagePath: inputState.img,\n    };\n\n    console.log(product);\n    axios\n      .post(\"http://localhost:8080/products\", product, {\n        headers: { Authorization: AuthStr },\n      })\n      .then((res) => {\n        console.log(\"Product has been added successfully\", res.data);\n        setAddResponse(\"Product has been added successfully\");\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  function onChangeProductName(e) {\n    setInputState({ ...inputState, prname: e.target.value });\n    setAddResponse(\"\");\n  }\n\n  function onChangeProductPrice(e) {\n    setInputState({ ...inputState, prprice: e.target.value });\n    setAddResponse(\"\");\n  }\n\n  //--------------Operation\n  useEffect(() => {\n    // localStorage.setItem(\"jwt\", \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYzOTYwOTc0NiwiZXhwIjoxNjM5NjI3NzQ2fQ.0Hi1HNx8ur9tgnwHNUKpW8EOINMu7ZCm6ad9_smb8-g\");\n    // localStorage.setItem(\"user\", \"admin\");\n\n    populateCategory();\n  }, []);\n\n  //--------------View\n  return (\n    <div>\n      <div className=\"productForm\">\n        <h2>Create new Product</h2>\n        Name:\n        <input type=\"text\" onChange={onChangeProductName} />\n        Price:\n        <input type=\"text\" onChange={onChangeProductPrice} />\n        Select catalog:\n        {/* <ComboBox\n          options={productCategory.category}\n          name=\"category\"\n          enableAutocomplete\n          onSelect={setSelectedCategory}\n        /> */}\n        <input type=\"submit\" value=\"Add product\" onClick={addNewProduct} />\n        <br />\n        <span className=\"responseMessage\">{addResponse}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Product;\n","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Order/Mycart.js",["89"],[],"function Orders() {}\n","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Order/Orders.js",["90"],[],"/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Product/ProductList.js",["91","92"],[],"import \"./product.css\";\nimport { useContext } from \"react\";\nimport { ResponseContext } from \"./ProductsShow\";\n\nfunction ProductList(props) {\n  const resContext = useContext(ResponseContext);\n\n  return (\n    <div className=\"general\">\n      {/* <span className='responseMessage'>{resContext}</span> */}\n      <h4>Product name:</h4> {props.name}\n      <h4>Product category:</h4> {props.productCategory}\n      <h4>Product price:</h4> {props.price}$<br></br>\n      <img className=\"productimage\" src={props.imagePath} />\n      <br />\n      <input type=\"button\" value=\"Update\" className=\"spacebutton\"></input>\n      <input\n        type=\"button\"\n        value=\"Delete\"\n        onClick={() => props.deleteProduct(props.id)}\n      ></input>\n    </div>\n  );\n}\n\nexport default ProductList;\n","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/Register/Register.js",["93"],[],"import React, { useRef, useState, useEffect } from \"react\";\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"../API/Axios\";\n\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3, 23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-0])(?=.*[!@#$%]){8, 23}$/;\nconst REGISTER_URL = \"/register\";\n\nconst Register = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [user, pwd, matchPwd]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //if button enabled with JS hack\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    if (!v1 || !v2) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n    try {\n      const response = await axios.post(\n        REGISTER_URL,\n        JSON.stringify({ user, pwd }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        }\n      );\n      console.log(response.data);\n      console.log(response.accessToken);\n      console.log(JSON.stringify(response));\n      setSuccess(true);\n      //clear input fields\n    } catch (err) {\n      if (!err?.response) {\n        setErrMsg(\"No server response\");\n      } else if (err.response?.status === 409) {\n        setErrMsg(\"Username Taken\");\n      } else {\n        setErrMsg(\"Registration failed\");\n      }\n      errRef.current.focus();\n    }\n  };\n\n  return (\n    <>\n      {success ? (\n        <section>\n          <h1>success</h1>\n          <p>\n            <a href=\"#\">Sign In</a>\n          </p>\n        </section>\n      ) : (\n        <section>\n          <p\n            ref={errRef}\n            className={errMsg ? \"errMsg\" : \"offscreen\"}\n            aria-live=\"assertive\"\n          >\n            {errMsg}\n          </p>\n          <h1>Register</h1>\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"username\">\n              Username:\n              <span className={validName ? \"valid\" : \"hide\"}>\n                <FontAwesomeIcon icon={faCheck} />\n              </span>\n              <span className={validName || !user ? \"hide\" : \"invalid\"}>\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setUser(e.target.value)}\n              required\n              aria-invalid={validName ? \"false\" : \"true\"}\n              aria-describedby=\"uidnote\"\n              onFocus={() => setUserFocus(true)}\n              onBlur={() => setUserFocus(false)}\n            />\n\n            <p\n              id=\"uidnote\"\n              className={\n                userFocus && user && !validName ? \"instructions\" : \"offscreen\"\n              }\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              4 to 24 characters. <br />\n              Must begin with letter. <br />\n              Letters, numbers, underscores, hyphens allowed.\n            </p>\n\n            <label htmlFor=\"password\">\n              Password:\n              <span className={validPwd ? \"valid\" : \"hide\"}>\n                <FontAwesomeIcon icon={faCheck} />\n              </span>\n              <span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={(e) => setPwd(e.target.value)}\n              required\n              aria-invalid={validPwd ? \"false\" : \"true\"}\n              aria-describedby=\"pwdnote\"\n              onFocus={() => setPwdFocus(true)}\n              onBlur={() => setPwdFocus(false)}\n            />\n\n            <p\n              id=\"pwdnote\"\n              className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              8 to 24 characters. <br />\n              Must include uppercase and lowercase letters, a number and a\n              special character. <br />\n              Allowed special characters:{\" \"}\n              <span aria-label=\"exclamation mark\">!</span>\n              <span aria-label=\"at symbol\">@</span>\n              <span aria-label=\"hashtag\">#</span>\n              <span aria-label=\"dollar sign\">$</span>\n              <span aria-label=\"percent\">%</span>\n            </p>\n\n            <label htmlFor=\"confirm_pwd\">\n              Confirm Password:\n              <span className={validMatch && \"matchPwd\" ? \"valid\" : \"hide\"}>\n                <FontAwesomeIcon icon={faCheck} />\n              </span>\n              <span className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}>\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            </label>\n            <input\n              type=\"password\"\n              name=\"confirm_pwd\"\n              onChange={(e) => setMatchPwd(e.target.value)}\n              required\n              aria-invalid={validMatch ? \"false\" : \"true\"}\n              aria-describedby=\"confirmnote\"\n              onFocus={() => setMatchFocus(true)}\n              onBlur={() => setMatchFocus(false)}\n            />\n\n            <p\n              id=\"confirmnote\"\n              className={\n                matchFocus && !validMatch ? \"instructions\" : \"offscreen\"\n              }\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              Must match the first password input field.\n            </p>\n\n            <button\n              disabled={!validName || !validPwd || validMatch ? true : false}\n            >\n              Sign Up\n            </button>\n          </form>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Register;\n","/Users/tamirbold/Desktop/Online-Shopping-Cart-System/client/src/API/Axios.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":21,"column":9,"nodeType":"96","messageId":"97","endLine":21,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":33,"column":19,"nodeType":"100","messageId":"101","endLine":33,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":67,"column":13,"nodeType":"104","endLine":67,"endColumn":62},{"ruleId":"94","severity":1,"message":"105","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":24,"column":46,"nodeType":"100","messageId":"101","endLine":24,"endColumn":48},{"ruleId":"94","severity":1,"message":"106","line":10,"column":9,"nodeType":"96","messageId":"97","endLine":10,"endColumn":16},{"ruleId":"94","severity":1,"message":"107","line":9,"column":10,"nodeType":"96","messageId":"97","endLine":9,"endColumn":25},{"ruleId":"94","severity":1,"message":"108","line":13,"column":28,"nodeType":"96","messageId":"97","endLine":13,"endColumn":47},{"ruleId":"109","severity":1,"message":"110","line":79,"column":6,"nodeType":"111","endLine":79,"endColumn":8,"suggestions":"112"},{"ruleId":"94","severity":1,"message":"113","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":16},{"ruleId":"94","severity":1,"message":"113","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":16},{"ruleId":"94","severity":1,"message":"114","line":6,"column":9,"nodeType":"96","messageId":"97","endLine":6,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":14,"column":7,"nodeType":"104","endLine":14,"endColumn":61},{"ruleId":"115","severity":1,"message":"116","line":98,"column":13,"nodeType":"104","endLine":98,"endColumn":25},"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'AuthStr' is assigned a value but never used.","'productCategory' is assigned a value but never used.","'setSelectedCategory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'populateCategory'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'Orders' is defined but never used.","'resContext' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"118","fix":"119"},"Update the dependencies array to be: [populateCategory]",{"range":"120","text":"121"},[2243,2245],"[populateCategory]"]